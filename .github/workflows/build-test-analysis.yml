## This workflow will trigger on every push or pull request to the main branch. It will run on the ubuntu-latest environment and perform the following steps:
# Job1: 
# Check out the code from the repository.
# Set up Java 17 on the runner.
# Build the project using Maven.
# Run the unit tests using Maven.
# Job2:
# Check out the code from the repository.
# Set up Java 17 on the runner.
# Build and code quality analysis with SonarQube



name: Build-Test-Analysis

on:
  push:
    branches:
      - main

jobs:
  job1:

    runs-on: ubuntu-latest


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package
          
      - name: Test with Maven
        run: mvn test
        
          
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Analyse with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: >
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=hassanonsori
            -Dsonar.projectKey=hassanonsori_timerstopwatch
            -Dsonar.branch.name=main
            -Dsonar.login=$SONAR_TOKEN
            
